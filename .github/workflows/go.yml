name: Build, Test, and Publish

# Triggers the workflow on push events for the main and develop branches,
# and on pull request events targeting the main branch.
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # =============================
  #      Test Job
  # =============================
  # This job runs on all triggered events to validate the code.
  test:
    name: Test and Validate
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5 # Use latest major version
        with:
          go-version: '1.24.5'

      - name: Download dependencies
        run: go mod download

      # Combine test and coverage into a single efficient step
      - name: Run tests with coverage
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...


  # =============================
  #      Publish Job
  # =============================
  # This job runs ONLY on a push to the 'main' branch AFTER the 'test' job succeeds.
  # It builds and pushes the Docker image and Go executable.
  publish:
    name: Build and Publish
    runs-on: ubuntu-24.04
    needs: test # Ensures this job only runs if tests pass
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Condition to run only on main branch push

    # Grant permissions for this job to write to packages (GHCR) and create a release (contents)
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      # 🔑 Login to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 🏷️ Extract metadata (tags and labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 📦 Build the Go executable for the release
      - name: Build Go executable
        run: go build -v -o bin/technicalLag ./cmd/technicalLag.go

      # 🚀 Build and push Docker image to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # 🎉 Create a GitHub Release and upload the Go executable as an asset
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: bin/technicalLag
          # This will create a release tagged with the commit SHA by default.
          # You can customize the tag_name, name, and body.
          tag_name: "v${{ github.run_number }}"
          name: "Release ${{ github.run_number }}"
